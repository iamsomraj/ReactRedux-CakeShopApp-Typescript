{"version":3,"sources":["store/action-types/index.ts","store/reducers/cakeReducer.ts","store/reducers/iceCreamReducer.ts","store/reducers/userReducer.ts","store/reducers/index.ts","store/store.ts","store/action-creators/index.ts","hooks/useActions.ts","hooks/useTypedSelector.ts","components/CakeContainer.tsx","components/IceCreamContainer.tsx","components/NewCakeContainer.tsx","components/UserListContainer.tsx","App.tsx","index.tsx"],"names":["actionTypes","initialState","numOfCakes","cakeReducer","state","action","type","BUY_CAKE","payload","numOfIceCream","iceCreamReducer","BUY_ICECREAM","loading","data","error","userReducer","FETCH_USER_REQUEST","FETCH_USER_SUCCESS","FETCH_USER_FAILURE","rootReducer","combineReducers","cakes","iceCreams","users","store","createStore","composeWithDevTools","applyMiddleware","thunk","buyCake","order","buyIceCream","fetchUser","dispatch","a","axios","get","names","map","user","name","message","useActions","useDispatch","bindActionCreators","actionCreators","useTypedSelector","useSelector","CakeContainer","onClick","event","IceCreamContainer","NewCakeContainer","useState","setOrder","value","onChange","e","parseInt","target","UserListContainer","useEffect","App","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.2c8718a6.chunk.js","sourcesContent":["export enum actionTypes {\r\n  BUY_CAKE = \"BUY_CAKE\",\r\n  BUY_ICECREAM = \"BUY_ICECREAM\",\r\n  FETCH_USER_REQUEST = \"FETCH_USER_REQUEST\",\r\n  FETCH_USER_SUCCESS = \"FETCH_USER_SUCCESS\",\r\n  FETCH_USER_FAILURE = \"FETCH_USER_FAILURE\",\r\n}\r\n","import { actionTypes } from \"../action-types\";\r\nimport { BuyCakeAction } from \"../actions/index\";\r\n\r\ninterface CakeState {\r\n  numOfCakes: number;\r\n}\r\n\r\nconst initialState: CakeState = {\r\n  numOfCakes: 10,\r\n};\r\n\r\nconst cakeReducer = (\r\n  state: CakeState = initialState,\r\n  action: BuyCakeAction\r\n): CakeState => {\r\n  switch (action.type) {\r\n    case actionTypes.BUY_CAKE:\r\n      return {\r\n        numOfCakes: state.numOfCakes - action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default cakeReducer;\r\n","import { actionTypes } from \"../action-types\";\r\nimport { BuyIceCreamAction } from \"../actions\";\r\n\r\ninterface IceCreamState {\r\n  numOfIceCream: number;\r\n}\r\n\r\nconst initialState: IceCreamState = {\r\n  numOfIceCream: 20,\r\n};\r\n\r\nconst iceCreamReducer = (\r\n  state: IceCreamState = initialState,\r\n  action: BuyIceCreamAction\r\n): IceCreamState => {\r\n  switch (action.type) {\r\n    case actionTypes.BUY_ICECREAM:\r\n      return {\r\n        ...state,\r\n        numOfIceCream: state.numOfIceCream - 1,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default iceCreamReducer;\r\n","import { actionTypes } from \"../action-types\";\r\nimport { FetchUserAction } from \"../actions/index\";\r\ninterface UserState {\r\n  loading: boolean;\r\n  data: string[];\r\n  error: string | null;\r\n}\r\n\r\nconst initialState: UserState = {\r\n  loading: false,\r\n  data: [],\r\n  error: null,\r\n};\r\n\r\nconst userReducer = (\r\n  state: UserState = initialState,\r\n  action: FetchUserAction\r\n): UserState => {\r\n  switch (action.type) {\r\n    case actionTypes.FETCH_USER_REQUEST:\r\n      return {\r\n        loading: true,\r\n        data: [],\r\n        error: null,\r\n      };\r\n    case actionTypes.FETCH_USER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        data: action.payload,\r\n        error: null,\r\n      };\r\n    case actionTypes.FETCH_USER_FAILURE:\r\n      return {\r\n        loading: false,\r\n        data: [],\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default userReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport cakeReducer from \"./cakeReducer\";\r\nimport iceCreamReducer from \"./iceCreamReducer\";\r\nimport userReducer from \"./userReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  cakes: cakeReducer,\r\n  iceCreams: iceCreamReducer,\r\n  users: userReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import { applyMiddleware, createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  {},\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import { actionTypes } from \"../action-types\";\r\nimport { BuyCakeAction, BuyIceCreamAction, FetchUserAction } from \"../actions\";\r\nimport axios from \"axios\";\r\nimport { Dispatch } from \"redux\";\r\n\r\nexport const buyCake = (order: number = 1): BuyCakeAction => {\r\n  return {\r\n    type: actionTypes.BUY_CAKE,\r\n    payload: order,\r\n  };\r\n};\r\n\r\nexport const buyIceCream = (): BuyIceCreamAction => {\r\n  return {\r\n    type: actionTypes.BUY_ICECREAM,\r\n  };\r\n};\r\n\r\nexport const fetchUser = () => async (dispatch: Dispatch<FetchUserAction>) => {\r\n  dispatch({\r\n    type: actionTypes.FETCH_USER_REQUEST,\r\n  });\r\n  try {\r\n    const { data } = await axios.get(\r\n      \"https://jsonplaceholder.typicode.com/users\"\r\n    );\r\n    const names = data.map((user: { name: string }) => user.name);\r\n    dispatch({\r\n      type: actionTypes.FETCH_USER_SUCCESS,\r\n      payload: names,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.FETCH_USER_FAILURE,\r\n      payload: error.message,\r\n    });\r\n  }\r\n};\r\n","import { bindActionCreators } from \"redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { actionCreators } from \"../store\";\r\n\r\nexport const useActions = () => {\r\n  const dispatch = useDispatch();\r\n  return bindActionCreators(actionCreators, dispatch);\r\n};\r\n","import { TypedUseSelectorHook, useSelector } from \"react-redux\";\r\nimport { RootState } from \"../store\";\r\n\r\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\r\n","import { useActions } from \"../hooks/useActions\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst CakeContainer: React.FC = () => {\r\n  const { numOfCakes } = useTypedSelector((state) => state.cakes);\r\n  const { buyCake } = useActions();\r\n\r\n  const buyCakeHandler: React.MouseEventHandler<HTMLButtonElement> = (\r\n    event\r\n  ) => {\r\n    if (numOfCakes > 0) {\r\n      buyCake();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Number of cakes: {numOfCakes} </h2>\r\n      <button onClick={buyCakeHandler}>Buy Cake</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CakeContainer;\r\n","import { useActions } from \"../hooks/useActions\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst IceCreamContainer: React.FC = () => {\r\n  const { numOfIceCream } = useTypedSelector((state) => state.iceCreams);\r\n  const { buyIceCream } = useActions();\r\n\r\n  const buyIceCreamHandler: React.MouseEventHandler<HTMLButtonElement> = (\r\n    event\r\n  ) => {\r\n    if (numOfIceCream > 0) {\r\n      buyIceCream();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Number of icecreams: {numOfIceCream} </h2>\r\n      <button onClick={buyIceCreamHandler}>Buy IceCream</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default IceCreamContainer;\r\n","import { useState } from \"react\";\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst NewCakeContainer: React.FC = () => {\r\n  const [order, setOrder] = useState(0);\r\n  const { numOfCakes } = useTypedSelector((state) => state.cakes);\r\n  const { buyCake } = useActions();\r\n\r\n  const buyCakeHandler: React.MouseEventHandler<HTMLButtonElement> = (\r\n    event\r\n  ) => {\r\n    if (numOfCakes > 0) {\r\n      buyCake(order);\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h2>Number of cakes: {numOfCakes} </h2>\r\n        <input\r\n          type=\"number\"\r\n          value={order}\r\n          onChange={(e) => setOrder(parseInt(e.target.value))}\r\n        />\r\n        <button onClick={buyCakeHandler}>Buy {order} Cake</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewCakeContainer;\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useEffect } from \"react\";\r\nimport { useActions } from \"../hooks/useActions\";\r\nimport { useTypedSelector } from \"../hooks/useTypedSelector\";\r\n\r\nconst UserListContainer: React.FC = () => {\r\n  const { loading, data, error } = useTypedSelector((state) => state.users);\r\n  const { fetchUser } = useActions();\r\n\r\n  useEffect(() => {\r\n    fetchUser();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h2>Users</h2>\r\n      <button onClick={() => fetchUser()}>Fetch</button>\r\n      {loading && <div>Loading....</div>}\r\n      {error && <div>{error}</div>}\r\n      {!loading &&\r\n        !error &&\r\n        data.map((user) => {\r\n          return <p key={user}>{user}</p>;\r\n        })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserListContainer;\r\n","import CakeContainer from \"./components/CakeContainer\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\nimport IceCreamContainer from \"./components/IceCreamContainer\";\r\nimport NewCakeContainer from \"./components/NewCakeContainer\";\r\nimport UserListContainer from \"./components/UserListContainer\";\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <CakeContainer />\r\n      <IceCreamContainer />\r\n      <NewCakeContainer />\r\n      <UserListContainer />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.querySelector(\"#root\"));\r\n"],"sourceRoot":""}